/*
@mixin colours(
  $selector: false,
	$chain: '&--',
	$background: 'base',
	$border: true
) {
	@each $name, $values in $colours {
		#{$chain}#{$name} {
			@if $selector {
				#{$selector} {
					@if $background {
						background-color: map-get($values, $background);
						@if $border {
							border-color: darken(map-get($values, $background), 20%);
						}
					}
				}
			} @else {
				@if $background {
					background-color: map-get($values, $background);
				}
			}
		}
	}
}
*/

/*color variable map
$ds-colo: (
  blue: (
    medium: #33D1FF,
    light: #368EA8,
    dark: #13566A
  ),
  red: (
    medium: #d98328,
    light: #dd8f3d,
    dark: #c57623
  ),
  orange: (
    medium: #5a1321,
    light: #7b1a2d,
    dark: #51111e
  )
);

@mixin combi-dark-bgbd {
  @each $color, $color-value in $ds-colors {
    .#{$color} {
      [class^=light] {
        background: #{'$'}color-#{$color}-light;
        border-color: #{'$'}color-#{$color}-medium;

        &:after {
          content: "#{$color}: #{$color-value}";
          color: "#{$color}";
        }
      }

      [class^=medium] {
        background: #{'$'}color-#{$color}-medium;
        border-color: #{'$'}color-#{$color}-dark
      }

      [class^=dark] {
        background: #{'$'}color-#{$color}-dark;
        border-color: black;
      }
    }
  }
}

@mixin combi-light-bgbd {
  @each $color, $color-variant in $color-combi { // map-get(map-get($color-combi, colors)
    .#{$color} {
      &[class^="light"] { 
        background: #{'$'}color-#{$color}-light;
        border-color: white;
        &:after { content: "#{$color}"; }
      }
      &-medium {
        background: #{'$'}color-#{$color}-medium;
        border-color: #{'$'}color-#{$color}-light;
      }
      &-dark  {
        background: #{'$'}color-#{$color}-dark;
        border-color: #{'$'}color-#{$color}-medium;
      }
    }
  }
}
*/

